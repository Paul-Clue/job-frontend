{"version":3,"sources":["util/apiFetch.js","App.js","index.js"],"names":["getData","url","a","fetch","method","headers","data","App","first","useRef","second","useState","firstNum","setFirstInt","op","setOperator","secondNum","setSecondInt","Expression","firstInt","secondInt","operator","result","answer","setAnswer","loading","setLoading","handleOnChange","current","value","ele","document","getElementsByName","i","length","checked","className","animation","variant","onSubmit","event","preventDefault","params","URLSearchParams","operation","getAnswer","toString","then","response","json","error","console","log","id","htmlFor","type","name","ref","onChange","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.29546e6e.chunk.js","sourcesContent":["const getData = async (url) => {\n  const data = await fetch(url, {\n    method: 'Get',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',//eslint-disable-line\n    },\n  });\n  return data;\n};\n\nexport default getData;\n","import React, { useState, useRef } from 'react';\nimport * as ReactBootstrap from 'react-bootstrap';\nimport getData from './util/apiFetch';\nimport './assets/stylesheets/App.css';\n\nfunction App() {\n  const first = useRef();\n  const second = useRef();\n\n  const [firstNum, setFirstInt] = useState('');\n  const [op, setOperator] = useState('');\n  const [secondNum, setSecondInt] = useState('');\n  const [answer, setAnswer] = useState({\n    Expression: {\n      firstInt: '', secondInt: '', operator: '', result: '',\n    },\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const handleOnChange = () => {\n    setFirstInt(\n      first.current.value,\n    );\n\n    setSecondInt(\n      second.current.value,\n    );\n    const ele = document.getElementsByName('math');\n    for (let i = 0, length = ele.length; i < length; i += 1) {//eslint-disable-line\n      if (ele[i].checked) {\n        setOperator(\n          ele[i].value,\n        );\n        break;\n      }\n    }\n  };\n\n  const handleSubmit = (event) => {//eslint-disable-line\n    event.preventDefault();\n\n    const params = new URLSearchParams({\n      firstInt: firstNum,\n      operation: op,\n      secondInt: secondNum,\n    });\n\n    // const getAnswer = `http://localhost:3001/expression?${params.toString()}`;\n    const getAnswer = `https://morning-river-68243.herokuapp.com/expression?${params.toString()}`;\n\n    getData(getAnswer)\n      .then((response) => response.json())\n      .then((data) => {//eslint-disable-line\n\n        if (data.error === 'Please select an operator!' || data.error === 'Please fill in all fields!') {\n          setLoading(\n            false,\n          );\n          setAnswer(\n            {\n              Expression: {\n                firstInt: '', secondInt: '', operator: '', result: data.error,\n              },\n            },\n          );\n        } else {\n          console.log(data);\n          setAnswer(\n            data,\n          );\n          setLoading(\n            false,\n          );\n\n          return data;\n        }\n      });\n    setLoading(\n      true,\n    );\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        {loading ? <ReactBootstrap.Spinner animation=\"border\" variant=\"info\" className=\"spinner\" /> : null}{/*eslint-disable-line*/}\n        {/* <ReactBootstrap.Spinner animation=\"border\" variant=\"info\" className=\"spinner\" /> */}\n        <h1>Basic Math</h1>\n        <form onSubmit={handleSubmit} id=\"loginId\">\n          <label htmlFor=\"nameInput\">\n            First Number:\n            <input type=\"text\" name=\"name\" ref={first} value={firstNum} id=\"firstNum\" onChange={handleOnChange} />\n          </label>\n\n          <br />\n          <br />\n          <label htmlFor=\"Add\" className=\"container\">\n            <input type=\"radio\" id=\"Add\" name=\"math\" value=\"+\" onChange={handleOnChange} />\n            <span className=\"checkmark\">+</span>\n            &nbsp;&nbsp;\n          </label>\n          {/* <br /> */}\n          <label htmlFor=\"Subtract\" className=\"container\">\n            <input type=\"radio\" id=\"Subtract\" name=\"math\" value=\"-\" onChange={handleOnChange} />\n            <span className=\"checkmark\">-</span>\n            &nbsp;&nbsp;\n          </label>\n          {/* <br /> */}\n          <label htmlFor=\"Multiply\" className=\"container\">\n            <input type=\"radio\" id=\"Multiply\" name=\"math\" value=\"*\" onChange={handleOnChange} />\n            <span className=\"checkmark\">x</span>\n            &nbsp;&nbsp;\n          </label>\n          {/* <br /> */}\n          <label htmlFor=\"Divide\" className=\"container\">\n            <input type=\"radio\" id=\"Divide\" name=\"math\" value=\"/\" onChange={handleOnChange} />\n            &nbsp;&nbsp;\n            <span className=\"checkmark\">/</span>\n          </label>\n          <br />\n          <br />\n\n          <label htmlFor=\"passwordInput\">\n            Second Number:\n            <input type=\"text\" name=\"secondNum\" ref={second} value={secondNum} id=\"secondNum\" onChange={handleOnChange} />\n          </label>\n\n          <br />\n          <br />\n          <br />\n          <input type=\"submit\" className=\"submitB\" value=\"Get Answer\" />\n        </form>\n        <br />\n        Result:\n        {answer ? <div className=\"resultDiv\">{answer.Expression.result}</div> : null}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/stylesheets/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}